<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="name">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="name" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="argument_list" minOccurs="0"/>
        <xs:element ref="index" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="extends">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="name" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="expr">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="name"/>
        <xs:element ref="call"/>
        <xs:element ref="index"/>
        <xs:element ref="class"/>
        <xs:element ref="block"/>
        <xs:element ref="comment"/>
      </xs:choice>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="argument">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="expr"/>
        <xs:element ref="name"/>
        <xs:element ref="index"/>
        <xs:element ref="extends"/>
        <xs:element ref="super"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="argument_list">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="argument"/>
        <xs:element ref="comment"/>
        <xs:element ref="block"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="call">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="name" minOccurs="0"/>
        <xs:element ref="argument_list" minOccurs="0"/>
        <xs:element ref="index" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="throw">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="expr"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="block">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="throw"/>
        <xs:element ref="decl_stmt"/>
        <xs:element ref="if"/>
        <xs:element ref="expr_stmt"/>
        <xs:element ref="comment"/>
        <xs:element ref="return"/>
        <xs:element ref="try"/>
        <xs:element ref="function"/>
        <xs:element ref="constructor"/>
        <xs:element ref="class"/>
        <xs:element ref="function_decl"/>
        <xs:element ref="for"/>
        <xs:element ref="while"/>
        <xs:element ref="do"/>
        <xs:element ref="continue"/>
        <xs:element ref="break"/>
        <xs:element ref="label"/>
        <xs:element ref="enum"/>
        <xs:element ref="case"/>
        <xs:element ref="default"/>
        <xs:element ref="switch"/>
        <xs:element ref="expr"/>
        <xs:element ref="escape"/>
        <xs:element ref="catch"/>
        <xs:element ref="block"/>
        <xs:element ref="empty_stmt"/>
        <xs:element ref="decl"/>
        <xs:element ref="param"/>
        <xs:element ref="else"/>
        <xs:element ref="finally"/>
      </xs:choice>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="condition">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="expr" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="then">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="block"/>
        <xs:element ref="throw"/>
        <xs:element ref="expr_stmt"/>
        <xs:element ref="comment"/>
        <xs:element ref="if"/>
        <xs:element ref="return"/>
        <xs:element ref="break"/>
        <xs:element ref="continue"/>
        <xs:element ref="empty_stmt"/>
        <xs:element ref="for"/>
        <xs:element ref="while"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="if">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="init" minOccurs="0"/>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
        <xs:element ref="comment" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="else" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="incr" minOccurs="0"/>
        <xs:element ref="block" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="specifier">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="name" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="argument_list" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="parameter_list">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="param" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="throws">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="argument" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="type">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="name"/>
        <xs:element ref="specifier"/>
        <xs:element ref="index"/>
        <xs:element ref="argument_list"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="decl">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="type"/>
        <xs:element ref="name"/>
        <xs:element ref="init"/>
        <xs:element ref="block"/>
        <xs:element ref="range"/>
        <xs:element ref="argument_list"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="init">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="expr" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="param">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="decl"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="expr_stmt">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="expr"/>
        <xs:element ref="init"/>
        <xs:element ref="condition"/>
        <xs:element ref="then"/>
        <xs:element ref="decl"/>
        <xs:element ref="else"/>
        <xs:element ref="specifier"/>
        <xs:element ref="name"/>
        <xs:element ref="incr"/>
        <xs:element ref="block"/>
        <xs:element ref="comment"/>
        <xs:element ref="parameter_list"/>
        <xs:element ref="super"/>
        <xs:element ref="type" minOccurs="0"/>
      </xs:choice>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="decl_stmt">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
        <xs:element ref="else" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
        <xs:element ref="type" minOccurs="0"/>
        <xs:element ref="specifier" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="name" minOccurs="0"/>
        <xs:element ref="parameter_list" minOccurs="0"/>
        <xs:element ref="block" minOccurs="0"/>
        <xs:element ref="comment" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="return">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="expr" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="comment">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="expr"/>
        <xs:element ref="decl"/>
        <xs:element ref="condition"/>
        <xs:element ref="then"/>
        <xs:element ref="comment"/>
        <xs:element ref="else"/>
        <xs:element ref="type"/>
        <xs:element ref="name"/>
        <xs:element ref="argument_list"/>
        <xs:element ref="call"/>
        <xs:element ref="parameter_list"/>
        <xs:element ref="block"/>
        <xs:element ref="catch"/>
        <xs:element ref="index"/>
        <xs:element ref="init"/>
        <xs:element ref="incr"/>
        <xs:element ref="throws"/>
      </xs:choice>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="else">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="block"/>
        <xs:element ref="if"/>
        <xs:element ref="comment"/>
        <xs:element ref="return"/>
        <xs:element ref="expr_stmt"/>
        <xs:element ref="throw"/>
        <xs:element ref="break"/>
        <xs:element ref="empty_stmt"/>
        <xs:element ref="switch"/>
        <xs:element ref="continue"/>
      </xs:choice>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="catch">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="param" minOccurs="0"/>
        <xs:element ref="block" minOccurs="0"/>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="try">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="block" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="comment" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="catch" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="finally" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
        <xs:element ref="else" minOccurs="0"/>
        <xs:element ref="empty_stmt" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="index">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="expr" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="function">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="type" minOccurs="0"/>
        <xs:element ref="specifier" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="name" minOccurs="0"/>
        <xs:element ref="parameter_list" minOccurs="0"/>
        <xs:element ref="throws" minOccurs="0"/>
        <xs:element ref="super" minOccurs="0"/>
        <xs:element ref="block" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
      <xs:attribute type="xs:string" name="char" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="super">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="extends" minOccurs="0"/>
        <xs:element ref="name" minOccurs="0"/>
        <xs:element ref="implements" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="constructor">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="specifier" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="type" minOccurs="0"/>
        <xs:element ref="name" minOccurs="0"/>
        <xs:element ref="parameter_list" minOccurs="0"/>
        <xs:element ref="throws" minOccurs="0"/>
        <xs:element ref="block" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="expr_stmt" minOccurs="0"/>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="class">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="specifier" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="type" minOccurs="0"/>
        <xs:element ref="name" minOccurs="0"/>
        <xs:element ref="super" minOccurs="0"/>
        <xs:element ref="argument_list" minOccurs="0"/>
        <xs:element ref="parameter_list" minOccurs="0"/>
        <xs:element ref="throws" minOccurs="0"/>
        <xs:element ref="block" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="expr_stmt" minOccurs="0"/>
        <xs:element ref="constructor" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="package">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="name" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="import">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="name" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="function_decl">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="type" minOccurs="0"/>
        <xs:element ref="name" minOccurs="0"/>
        <xs:element ref="parameter_list" minOccurs="0"/>
        <xs:element ref="throws" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="incr">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="expr" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="for">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="init" maxOccurs="unbounded" minOccurs="0"/>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="incr" minOccurs="0"/>
        <xs:element ref="block" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
        <xs:element ref="if" minOccurs="0"/>
        <xs:element ref="expr_stmt" minOccurs="0"/>
        <xs:element ref="empty_stmt" minOccurs="0"/>
        <xs:element ref="else" minOccurs="0"/>
        <xs:element ref="for" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="while">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="init" minOccurs="0"/>
        <xs:element ref="block" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
        <xs:element ref="comment" minOccurs="0"/>
        <xs:element ref="expr_stmt" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="empty_stmt" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
        <xs:element ref="else" minOccurs="0"/>
        <xs:element ref="if" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="do">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="block" minOccurs="0"/>
        <xs:element ref="expr_stmt" minOccurs="0"/>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="continue">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="continue;"/>
        <xs:enumeration value="continue startSearchForLastChar;"/>
        <xs:enumeration value="continue outer;"/>
        <xs:enumeration value="continue nextCand;"/>
        <xs:enumeration value="continue retry;"/>
        <xs:enumeration value="continue next;"/>
        <xs:enumeration value="continue loop;"/>
        <xs:enumeration value="continue NEXT;"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="break">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="type" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="label">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="name" minOccurs="0"/>
        <xs:element ref="init" minOccurs="0"/>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="incr" minOccurs="0"/>
        <xs:element ref="block" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="finally">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="block"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="implements">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="name" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="enum">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="specifier"/>
        <xs:element ref="comment"/>
        <xs:element ref="name"/>
        <xs:element ref="block"/>
        <xs:element ref="expr"/>
        <xs:element ref="decl"/>
        <xs:element ref="super" minOccurs="0"/>
      </xs:choice>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="case">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="expr"/>
        <xs:element ref="decl_stmt"/>
        <xs:element ref="if"/>
        <xs:element ref="comment"/>
        <xs:element ref="expr_stmt"/>
        <xs:element ref="break"/>
        <xs:element ref="return"/>
        <xs:element ref="throw"/>
        <xs:element ref="switch"/>
        <xs:element ref="try"/>
        <xs:element ref="continue"/>
        <xs:element ref="for"/>
        <xs:element ref="while"/>
        <xs:element ref="block"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="default">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="if"/>
        <xs:element ref="expr_stmt"/>
        <xs:element ref="break"/>
        <xs:element ref="comment"/>
        <xs:element ref="throw"/>
        <xs:element ref="return"/>
        <xs:element ref="block"/>
        <xs:element ref="decl_stmt"/>
        <xs:element ref="continue"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="switch">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="condition" minOccurs="0"/>
        <xs:element ref="block" minOccurs="0"/>
        <xs:element ref="then" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
        <xs:element ref="decl" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="range">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="expr"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="escape">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="char" use="optional"/>
          <xs:attribute type="xs:string" name="type" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="empty_stmt">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="decl" minOccurs="0"/>
        <xs:element ref="expr" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute type="xs:string" name="type" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="unit">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="unbounded" minOccurs="0">
        <xs:element ref="comment"/>
        <xs:element ref="package"/>
        <xs:element ref="import"/>
        <xs:element ref="class"/>
        <xs:element ref="expr_stmt"/>
        <xs:element ref="decl_stmt"/>
        <xs:element ref="function_decl"/>
        <xs:element ref="constructor"/>
        <xs:element ref="function"/>
        <xs:element ref="return"/>
        <xs:element ref="else"/>
        <xs:element ref="try"/>
        <xs:element ref="if"/>
        <xs:element ref="for"/>
        <xs:element ref="empty_stmt"/>
        <xs:element ref="escape"/>
        <xs:element ref="enum"/>
        <xs:element ref="catch"/>
        <xs:element ref="while"/>
        <xs:element ref="switch"/>
        <xs:element ref="block"/>
        <xs:element ref="unit"/>
      </xs:choice>
      <xs:attribute type="xs:string" name="language" use="optional"/>
      <xs:attribute type="xs:string" name="filename" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>